name: Deploy Production

on:
  pull_request:
    branches: [main]

  push:
    branches: [main]
  
  workflow_dispatch:

jobs:
  security:
    runs-on: ubuntu-latest
    name: Security Checks

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  build-production:
    name: Build Production

    runs-on: ubuntu-latest

    environment:
      name: production

    needs: security
    
    permissions:
        contents: write

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get Version from package.json
        id: get_version
        run: echo "::set-output name=version::$(node -p "require('./package.json').version")"
    
      - name: Create Git Tag
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
  
          # Replace "v1.0.0" with the actual version number
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release version ${{ steps.get_version.outputs.version }}"
  
      - name: Push Git Tag
        run: git push origin "v${{ steps.get_version.outputs.version }}"
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image ${{ steps.get_version.outputs.version }}
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: felipemmachado28/smartvendas-front:v${{ steps.get_version.outputs.version }}
    
      - name: Build and push Docker image latest
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: felipemmachado28/smartvendas-front:latest


  deploy-production:
    name: "Deploy Production"
    runs-on: ubuntu-latest

    needs: build-production

    environment:
      name: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: replace envs
        run: |
          sed -i "s|API_ROUTER|${{ vars.API_ROUTER }}|" docker-compose.yml

          sed -i "s|DOCKER_SERVER_NAME|smartvendas-front|" docker-compose.yml
          sed -i "s|DOCKER_CONTAINER_NAME|smartvendas-front-prd|" docker-compose.yml
          sed -i "s|DOCKER_IMAGE_NAME|felipemmachado28/smartvendas-front:latest|" docker-compose.yml
          sed -i "s|DOCKER_PORT|${{ vars.EXTERNAL_PORT }}:80|" docker-compose.yml

      - name: copy docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml"
          target: "/home/smart-prod"

      - name: pull image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker pull felipemmachado28/smartvendas-front:latest

      - name: stop/start container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker compose down
            docker compose up --build -d
            docker logout
            rm docker-compose.yml